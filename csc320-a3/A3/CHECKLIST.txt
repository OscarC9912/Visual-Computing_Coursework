-------------------------------------
Assignment 3 Checklist/Grading sheet
-------------------------------------

Name: Zhonghan CHEN
Student ID: 1005770541

------------------------------------------------------------------------------
A. PLEASE ANSWER THE FOLLOWING QUESTIONS (YOUR ASSIGNMENT WILL NOT BE MARKED
   IF THEY ARE NOT ANSWERED)

  
1. I verify that my submission adheres to the Academic Honesty policy 
   stated in the A3 handout.

   _X_ Yes   ___No

2. I copied, modified, re-wrote, or re-purposed source code that was not 
   originally written by me (in Python, Java, C++ or any other programming 
   language). See the A3 handout for policy regarding uses of such 
   pre-existing code

  ___Yes   _X_ No
  
  If you checked yes, please supply the following

     - URL(s) to the original source code:

     - Portion(s) of the assignment aided by that code (refer to
       checklist below):

     - Original source code should also be placed under 320/A3/extras 
       in your submitted zip file. Please supply author name(s) if known.
  
3. I collaborated on this assignment with another student 
   See the A3 handout for policy on assignments done in collaboration

  ___Yes   _X_ No

  If you checked yes, please supply the following

      Student name: 
      Portion(s) of assignment completed by that student (see checklist    
      below)


------------------------------------------------------------------------------
B. PLACE AN (X) IN FRONT OF PORTIONS OF THE ASSIGNMENT THAT YOU COMPLETED IN 
   FULL.
   
   If a portion of the assignment was not completed fully, please provide 
   additional information so that we can determine whether or not you are 
   eligible for partial credit. THE MORE INFORMATION YOU SUPPLY (EG. METHOD 
   WHICH CONTAINS PARTIAL CODE, SUGGESTIONS ON WHERE AND WHAT TO LOOK FOR IN 
   YOUR PARTIAL IMPLEMENTATION, DETAILED COMMENTS IN YOUR CODE, ETC) THE MORE 
   LIKELY IT IS WE WILL BE ABLE TO MAKE AN ACCURATE ASSESSMENT

_X_   (  5 marks) Part A.1    Run button 

_X_   ( 10 marks) Part A.2    Crosshairs refresh

_X_   ( 25 marks) Part B.1.1  computeGradient() 

_X_   ( 30 marks) Part B.1.2  computeNormal()

_X_   ( 10 marks) Part B.1.3  computeC()

_X_   (  5 marks) Part B.1.4  readImage() and writeImage()

_X_   (  5 marks) Part B.2.1  Experimental evaluation

_X_   ( 10 marks) Part 2.2    PDF report

------------------------------------------------------------------------------ 


DECLARATION:

I would like to make a DECLARATION on the resource I used / consulted:

         NO CODE COPYING of ANY FORM

1. https://docs.opencv.org/3.4/d2/d2c/tutorial_sobel_derivatives.html
   
   * I consulted this official CV2 doc for using the Sobel operator. 
     Specifically, I choose the same parameter values: ddepth and kernel size ,for my Sobel operations.


2. https://stackoverflow.com/questions/5469286/how-to-get-the-index-of-a-maximum-element-in-a-numpy-array-along-one-axis

   * I consulted the website on how to get the index of the maximum element in a ndarray without looping.
     And I use it in last few lines of my ComputeGradient function.


3. https://forum.opencv.org/t/get-the-normal-vector-angle-on-the-point/4647

   * I consulted a post of the website on idea of how to compute the normal vector given the X or Y direction.
     And this contribute to my computeNormal function: line 265, which I consider it to be the key of the computeNormal.


     

CLARIFICATION:

For both of my images in Part C, I need to set the maximum iteration to be greater than 100 so that it would 
have a proper result:

      for my selfie one: 380 iterations
      for the wolf one: 450 iterations.